{"version":3,"names":[],"mappings":"","sources":["routes/index.js"],"sourcesContent":["'use strict';\n\nvar express = require('express');\nvar router = express.Router();\n\nlet lista = require('../data');\n/* GET home page. */\nrouter.get('/', function (req, res, next) {\n  res.render('index', { title: 'My to do list', lista });\n}).get('/add', function (req, res) {\n  res.render('add', { title: 'Add New List' });\n}).get('/:id/edit', function (req, res) {\n  //find flight by ID\n  let f = lista[req.params.id];\n  console.log('Lista-->', f);\n  if (f) {\n    res.format({\n      //HTML response will render the 'edit.jade' template\n      html() {\n        res.render('edit', { text: f });\n      },\n      //JSON response will return the JSON output\n      json() {\n        res.json(f);\n      }\n    });\n  }\n}).post('/', function (req, res, next) {\n  // Get values from POST request. These can be done through forms or REST calls. These rely on the \"name\" attributes for forms\n  var number = req.body.number;\n  var dato = req.body.dato;\n  //call the create function for our database\n  let item = {\n    number,\n    dato\n  };\n\n  lista[number] = item;\n  console.log(lista);\n  //res.redirect(\"/\");\n  res.format({\n    //HTML response will set the location and redirect back to the home page. You could also create a 'success' page if that's your thing\n    html() {\n      // If it worked, set the header so the address bar doesn't still say /adduser\n      res.location('');\n      // And forward to success page\n      res.redirect('/');\n    },\n    //JSON response will show the newly created blob\n    json() {\n      res.json(lista);\n    }\n  });\n}).post('/:id/delete', function (req, res) {\n  //find flight by ID\n  delete lista[req.params.id];\n\n  res.format({\n    //HTML returns us back to the main page, or you can create a success page\n    html() {\n      res.redirect('/');\n    },\n    //JSON returns the item with the message that is has been deleted\n    json() {\n      res.json(lista);\n    }\n  });\n}).post('/:id/update', function (req, res) {\n  var number = req.body.number;\n  var dato = req.body.dato;\n  //call the create function for our database\n  let item = {\n    number,\n    dato\n  };\n  //flights.push(item);\n  lista[req.params.id] = item;\n  console.log(lista);\n  //res.redirect(\"/\");\n  res.format({\n    //HTML response will set the location and redirect back to the home page. You could also create a 'success' page if that's your thing\n    html() {\n      // If it worked, set the header so the address bar doesn't still say /adduser\n      res.location('');\n      // And forward to success page\n      res.redirect('/');\n    },\n    //JSON response will show the newly created blob\n    json() {\n      res.json(lista);\n    }\n  });\n});\n\n/**/\nmodule.exports = router;"],"file":"index.js"}