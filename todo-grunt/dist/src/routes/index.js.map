{"version":3,"sources":["../../../src/routes/index.js"],"names":["express","require","router","Router","lista","get","req","res","next","render","title","f","params","id","console","log","format","html","text","json","post","number","body","dato","item","location","redirect","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\n\nlet lista = require('../data');\n/* GET home page. */\nrouter\n  .get('/', function(req, res, next) {\n    res.render('index', { title: 'My to do list', lista });\n  })\n  .get('/add', function(req, res) {\n    res.render('add', { title: 'Add New List' });\n  })\n  .get('/:id/edit', function(req, res) {\n    //find flight by ID\n    let f = lista[req.params.id];\n    console.log('Lista-->', f);\n    if (f) {\n      res.format({\n        //HTML response will render the 'edit.jade' template\n        html() {\n          res.render('edit', { text: f });\n        },\n        //JSON response will return the JSON output\n        json() {\n          res.json(f);\n        }\n      });\n    }\n  })\n  .post('/', function(req, res, next) {\n    // Get values from POST request. These can be done through forms or REST calls. These rely on the \"name\" attributes for forms\n    var number = req.body.number;\n    var dato = req.body.dato;\n    //call the create function for our database\n    let item = {\n      number,\n      dato\n    };\n\n    lista[number] = item;\n    console.log(lista);\n    //res.redirect(\"/\");\n    res.format({\n      //HTML response will set the location and redirect back to the home page. You could also create a 'success' page if that's your thing\n      html() {\n        // If it worked, set the header so the address bar doesn't still say /adduser\n        res.location('');\n        // And forward to success page\n        res.redirect('/');\n      },\n      //JSON response will show the newly created blob\n      json() {\n        res.json(lista);\n      }\n    });\n  })\n  .post('/:id/delete', function(req, res) {\n    //find flight by ID\n    delete lista[req.params.id];\n\n    res.format({\n      //HTML returns us back to the main page, or you can create a success page\n      html() {\n        res.redirect('/');\n      },\n      //JSON returns the item with the message that is has been deleted\n      json() {\n        res.json(lista);\n      }\n    });\n  })\n  .post('/:id/update', function(req, res) {\n    var number = req.body.number;\n    var dato = req.body.dato;\n    //call the create function for our database\n    let item = {\n      number,\n      dato\n    };\n    //flights.push(item);\n    lista[req.params.id] = item;\n    console.log(lista);\n    //res.redirect(\"/\");\n    res.format({\n      //HTML response will set the location and redirect back to the home page. You could also create a 'success' page if that's your thing\n      html() {\n        // If it worked, set the header so the address bar doesn't still say /adduser\n        res.location('');\n        // And forward to success page\n        res.redirect('/');\n      },\n      //JSON response will show the newly created blob\n      json() {\n        res.json(lista);\n      }\n    });\n  });\n\n\n/**/\nmodule.exports = router;\n"]}